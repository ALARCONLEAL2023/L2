<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="Tenaris.WMS.Manager.WMSManager" type="Tenaris.Library.Proxy.Factories.GenericProxyFactoryConfigurationSection, Tenaris.Library.Proxy" />
    
    <section name="MachineVerificationHistoricConfigurationSection" type="Tenaris.WMS.View.MachineVerification.Historic.MachineVerificationHistoricConfigurationSection, Tenaris.WMS.View.MachineVerification.Historic" />

    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <section name="log" type="Tenaris.Library.Log.LogConfiguration, Tenaris.Library.Log" />

    <section name="RSPValidationConfigurationSection" type="Tenaris.WMS.View.MachineVerification.Model.RSPValidationConfigurationSection, Tenaris.WMS.View.MachineVerification" />
  </configSections>
  
  <appSettings>
    <add key="HeaderPath" value=".\View\Config" />
    <add key="Culture" value="es-MX" />
    <add key="ClientSettingsProvider.ServiceUri" value="" />
    <add key="LengthDecimals" value="2"/> <!--Numero de decimales a mostrar para longitudes-->
    <add key="WeightDecimals" value="1"/> <!--Numero de decimales a mostrar para pesos-->
    <add key="CheckReferencePipesInTracking" value="true"/> <!--Indica si hay que validar contra una zona de tracking la existencia de tubos patron. En true requiere que exista la seccion "RSPValidationConfigurationSection"-->
    <add key="ShowTenarisTitle" value="false"/>
  </appSettings>
  
  <connectionStrings>
    <add name="Level2_Casing" connectionString="Data Source=10.93.1.85;Initial Catalog=Level2_Linea2;User ID=sa;Password=Tamsa01;Persist Security Info=true;MultipleActiveResultSets=true; Asynchronous Processing=true;" providerName="System.Data.SqlClient"/>
    <!--<add name="Level2_Casing" connectionString="Data Source=10.92.24.106;Initial Catalog=Level2_Casing_Dev;User ID=level2;Password=level2;Persist Security Info=true;MultipleActiveResultSets=true; Asynchronous Processing=true;" providerName="System.Data.SqlClient" />-->
    <!--<add name="Level2_Casing" connectionString="Data Source=10.92.24.100;Failover Partner=10.92.24.101;Initial Catalog=Level2_Casing;User ID=Level2;Password=123level2123;Persist Security Info=True;MultipleActiveResultSets=True; Asynchronous Processing=true; Application Name=ParentChildManager; Pooling=true; Max Pool Size=300;"/>-->
  </connectionStrings>
  
  <MachineVerificationHistoricConfigurationSection historicDataBase="Level2_Casing" />

  
  <!--RSPValidationConfigurationSection: Especifica los valores a usar para la validación de tubos patron programados
        command: Nombre del stored procedure que realiza la validacion
        defaultConnectionString: nombre de la cadena de conxion a usar
        orderNumber : número de la OP definida para tubos patrón.
        trackingZoneCode: Código de BD de la zona donde se deben buscar los tubos
  -->
  <RSPValidationConfigurationSection
    defaultConnectionString="Level2_Casing" 
    trackingZoneCode="WmsEntrance" 
    orderNumber="999999" 
    command="[WMS].[GetRSPZoneValidation]"/>

  <Tenaris.WMS.Manager.WMSManager url="tcp://10.93.1.75:49402/Tenaris.WMS.Manager.WMSManager.soap" instanceType="Tenaris.WMS.Manager.Shared.IWMSManager, Tenaris.WMS.Manager.Shared" aliveInterval="2000" singleInstance="false" forumPresent="false"/>
  
  <log maxFileSize="8096"
    maxFileCount="100"
    maxQueueSize="10000"
    logLevel="Debug"
    traceAttributeLogEnabled="true"
    path="C:\Data\Logs\WmsMachineVerification\"
    logBaseName="WmsMachineVerificationView"
    additionalLogDestination="Console"
    logAssemblyLoad="true" 
    msgFormat="{TypeChar} {Timestamp:yyyy-MM-dd HH:mm} {IdentString} {Message}" />
  
  <log4net>
    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
      </layout>
    </appender>
    <appender name="LogFileAppender" type="log4net.Appender.RollingFileAppender">
      <!--Example of appender ONE IS MANDATORY-->
      <filter type="log4net.Filter.LevelRangeFilter">
        <!--Example of Filter for logger level OPTIONAL-->
        <param name="LevelMin" value="ALL" />
        <!--Min Level of Filter-->
        <param name="LevelMax" value="OFF" />
        <!--Max Level of Filter-->
      </filter>
      <param name="DatePattern" value="'.'yyyyMMdd'.log' " />
      <!--Example of DatePattern for concat in filename, this example logger in one file for each day OPTIONAL-->
      <param name="File" value=".\logs\WMS\MachineVerification" />
      <!--Log File name and save location MANDATORY-->
      <param name="AppendToFile" value="false" />
      <!--TRUE, append to exist file. FALSE, create and log in a new file. OPTIONAL-->
      <param name="rollingStyle" value="Date" />
      <!--Rolling style for de logfile-->
      <param name="maxSizeRollBackups" value="10" />
      <!--The maximum number of backup files that are kept before the oldest is erased. OPTIONAL -->
      <param name="maximumFileSize" value="4MB" />
      <!--Set the macimun File Size OPTIONAL-->
      <param name="staticLogFileName" value="false" />
      <!--TRUE, the logfile name is static. FALSE, allow change logfile OPTIONAL-->
      <layout type="log4net.Layout.PatternLayout">
        <param name="Header" value="[BEGIN_LOG %date{yyyy-MM-dd HH:mm} =========================] %newline" type="log4net.Util.PatternString" />
        <!--Configure the header of de logfile OPTIONAL-->
        <param name="Footer" value="[END_LOG %date{yyyy-MM-dd HH:mm} =========================]" type="log4net.Util.PatternString" />
        <!--Configure the footer of the logfile OPTIONAL-->
      </layout>
    </appender>
    <root>
      <appender-ref ref="LogFileAppender" />
      <appender-ref ref="ConsoleAppender" />
      <!--Set the appender-->
    </root>
  </log4net>
  <system.runtime.remoting>
    <application name="Client">
      <channels>
        <channel ref="tcp" port="0">
          <serverProviders>
            <formatter ref="binary" typeFilterLevel="Full" />
            <provider type="Tenaris.Library.Proxy.Remoting.ServerRemotingInterceptorProvider, Tenaris.Library.Proxy" />
          </serverProviders>
          <clientProviders>
            <provider type="Tenaris.Library.Proxy.Remoting.ClientRemotingInterceptorProvider, Tenaris.Library.Proxy" />
            <formatter ref="binary" typeFilterLevel="Full" />
          </clientProviders>
        </channel>
      </channels>
    </application>
  </system.runtime.remoting>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0" />
  </startup>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
  </system.web>
</configuration>