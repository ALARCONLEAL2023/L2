<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="ManagerBaseConfiguration" type="Tenaris.Manager.Forum.Shared.Configuration.ManagerBaseConfiguration, Tenaris.Manager.Forum.Shared"/>
    <section name="Tenaris.Hydrotest.Manager.HydrotestManager" type="Tenaris.Library.Framework.Factory.FactoryConfiguration, Tenaris.Library.Framework" />
    <section name="Tenaris.Manager.Handshake.HandshakeManager" type="Tenaris.Library.Proxy.Factories.GenericProxyFactoryConfigurationSection, Tenaris.Library.Proxy" />
    <section name="Tenaris.Manager.Tda.TdaManager" type="Tenaris.Library.Proxy.Factories.GenericProxyFactoryConfigurationSection, Tenaris.Library.Proxy" />
    <section name="Tenaris.Manager.Production.ProductionManager" type="Tenaris.Library.Proxy.Factories.GenericProxyFactoryConfigurationSection, Tenaris.Library.Proxy" />
    <section name="Tenaris.Manager.Preset.PresetManager" type="Tenaris.Library.Proxy.Factories.GenericProxyFactoryConfigurationSection, Tenaris.Library.Proxy" />
    <section name="Tenaris.Manager.Command.CommandManager" type="Tenaris.Library.Proxy.Factories.GenericProxyFactoryConfigurationSection, Tenaris.Library.Proxy"/>
    <section name="log" type="Tenaris.Library.Log.LogConfiguration, Tenaris.Library.Log" />
    <section name="DalFactory" type="Tenaris.Library.Framework.Factory.FactoryConfiguration, Tenaris.Library.Framework"/>
  </configSections>

  <connectionStrings>
    <!--<add name="dbLevel2" connectionString="Application Name=HydrotestManager; Data Source=172.29.108.207;Initial Catalog=RMD_Level2_Line1;User ID=drodriguez;Password=drodriguez;Persist Security Info=True;MultipleActiveResultSets=True; Asynchronous Processing=true; Pooling=true; Max Pool Size=300;"/>-->
    <!--<add name="dbLevel2" connectionString="Application Name=HydrotestManager; Data Source=10.92.70.124;Initial Catalog=Level2_Line1;User ID=Level2;Password=Level2;Persist Security Info=True;MultipleActiveResultSets=True; Asynchronous Processing=true; Pooling=true; Max Pool Size=300;"/>-->
    <add name="dbLevel2" connectionString="Application Name=HydrotestManager; Data Source=TNATFT2PRDLSN.tnsautoca.techint.net,5040;Initial Catalog=L2Trk;Integrated Security=SSPI;Persist Security Info=True;MultipleActiveResultSets=True; Asynchronous Processing=true; Pooling=true; Max Pool Size=300;"/>
  </connectionStrings>

  <appSettings>
    <add key="ETrackProcID" value="PHL2" />
    <add key="ETrackStatusAccepted" value="A" />
    <add key="ETrackStatusPending" value="P" />
    <add key="ETrackUser" value="NivelII" />
    <add key="ETrackPwd" value="ph22" />
  </appSettings>
  
  <ManagerBaseConfiguration areaCode="LINEA2" defaultConnectionStringName="dbLevel2"/>

  <DalFactory factoryType="Tenaris.Deen.Library.Framework.Data.Dals.DalFactoryImp, Tenaris.Deen.Library.Framework.Data" isSingleton="true">
    <Configuration autoRegister="false" defaultSessionName="dbLevel2">
      <DbSessionFactory type="Tenaris.Deen.Library.Framework.Data.DbSessions.AdoDbSessionFactory, Tenaris.Deen.Library.Framework.Data" isSingleton="true" />
      <Dals>
        <Dal interfaceType="" implementationType="Tenaris.Hydrotest.Manager.Administrator.CurvesCertifierConfigurationDal, Tenaris.Hydrotest.Manager.Administrator"/>
      </Dals>
    </Configuration>
  </DalFactory>

  <Tenaris.Hydrotest.Manager.HydrotestManager factoryType="Tenaris.Hydrotest.Manager.Factory, Tenaris.Hydrotest.Manager" isSingleton="True">
    <Configuration applicationCode="HydrotestManager"
                   sessionName="dbLevel2"
                   handshakeManagerFactoryName="Tenaris.Manager.Handshake.HandshakeManager"
                   commandManagerFactoryName="Tenaris.Manager.Command.CommandManager"
                   tdaManagerFactoryName="Tenaris.Manager.Tda.TdaManager"
                   presetManagerFactoryName="Tenaris.Manager.Preset.PresetManager"
                   productionManagerFactoryName="Tenaris.Manager.Production.ProductionManager"
                   certificationProcessTimeout="00:10:00"
                   curvesListenerTimeout="01:05:00">

      <Machines>

        <Machine machineCode="L2_PH22"
                 controllerName="HydrotesterControler"
                 curvesListenerName="CurvesListener"
                 curvesCertifierProviderName="PresetCurvesCertifierProvider"
                 curvesCertifierParameterProviderName="CurvesCertifierParameterProvider"
                 setPipeStatusOnTestFinished="true"
                 setQualityHistoryOnTestFinished="true"
                 setPipeStatusOnManualEdition="true"
                 setQualityHistoryOnManualEdition="true"
                 updateHeadStatusOnManualEdition="false"
                 enableCancelOnStart="true"
                 useTdaHS="true" />
      </Machines>

      <!-- See wich Controller version to use, depending on AUS version -->
      <Controllers>
        <Controller name="HydrotesterControler" type="Tenaris.Hydrotest.Manager.Controller, Tenaris.Hydrotest.Manager.Controller"/>
        <Controller name="Default"              type="Tenaris.Hydrotest.Manager.Controller.Controller, Tenaris.Hydrotest.Manager.Controller"/>
      </Controllers>

      <CurveListeners>
        <Listener name="CurvesListener" type="Tenaris.Library.Certification.CurveListeners.Tda.TdaCurveListener, Tenaris.Library.Certification" isSingleton="false"/>
      </CurveListeners>

      <CurveCertifierProviders>
        <Provider name="CurvesCertifierProvider" type="Tenaris.Hydrotest.Manager.Component.ApiCurveCertificationProvider, Tenaris.Hydrotest.Manager" isSingleton="false" />
        <Provider name="PresetCurvesCertifierProvider" type="Tenaris.Library.Certification.CurveCertifierProviders.PresetCurvesCertifierProvider, Tenaris.Library.Certification" isSingleton="false">
          <Configuration valueType="CurrentSet" />
        </Provider>
      </CurveCertifierProviders>

      <CurveCertifierParameterProviders>
        <Provider name="CurvesCertifierParameterProvider" type="Tenaris.Library.Certification.CurvesCertifierParameterProviders.PresetCurvesCertifierParameterProvider, Tenaris.Library.Certification" isSingleton="false">
          <Configuration valueType="CurrentSet" />
          <!--<PresetContainer type="Tenaris.Library.Certification.CurveCertifierProviders.PresetManagerToIPresetContainerAdapter, Tenaris.Library.Certification"/>-->
        </Provider>
      </CurveCertifierParameterProviders>

      <CurvesCertifiers>
        <Certifier code="API" type="Tenaris.Hydrotest.Manager.Certifier.API.ApiCurvesCertifier, Tenaris.Hydrotest.Manager.Certifier.API">
          <Configuration
                        curveCode="HydrotestCurve"
                        holdingTime="TEST_HOLDING_TIME"
                        pressureMinAccepted="TEST_PRESSURE"
						pressureMaxAccepted="TEST_PRESSURE_MAX"
                        pressureOffsetValue="280"
                        machineCode="L2_PH22"
                        conditionCodeHoldingTime="HOLDINGTIME"
                        conditionCodeMinPressure="MINPRESSURE"
                        conditionCodeMaxPressure="MAXPRESSURE"
                        conditionEtrackVal="ETRACKVALIDATION"
						validatePipeIdentification="false"
                                  >

          </Configuration>


        </Certifier>
        <Certifier code="AGIP" type="Tenaris.Hydrotest.Manager.Certifier.AGIP.AgipCurveCertifier, Tenaris.Hydrotest.Manager.Certifier.AGIP">
          <Configuration
                        curveCode=""
                        holdingTime="HydroTime"
                        pressureMinAccepted="HydroPressure"
                        pressureOffsetValue="20"
                        conditionCodeHoldingTime="HOLDINGTIME"
                        conditionCodeMinPressure="MINPRESSURE"
                        conditionCodeMaxPressure="MAXPRESSURE"
                                  />
        </Certifier>
      </CurvesCertifiers>
    </Configuration>
  </Tenaris.Hydrotest.Manager.HydrotestManager>

  <Tenaris.Manager.Handshake.HandshakeManager
  instanceType="Tenaris.Manager.Handshake.Shared.IHandshakeManager, Tenaris.Manager.Handshake.Shared"
  aliveInterval="5000"
  singleInstance="true"
  isSingleton="true"
  validateConnection="false">
    <Redundancy>
      <Address url="tcp://TNACAWFM197.tnsautoca.techint.net:21002/HandshakeManager.soap" forumPresent="false" isTargetManager="true"/>
    </Redundancy>
  </Tenaris.Manager.Handshake.HandshakeManager>

  <Tenaris.Manager.Command.CommandManager
      instanceType="Tenaris.Manager.Command.Shared.ICommandManager, Tenaris.Manager.Command.Shared"
      aliveInterval="5000"
      singleInstance="true"
  isSingleton="true"
      validateConnection="false">
    <Redundancy>
      <Address url="tcp://TNACAWFM197.tnsautoca.techint.net:21003/Tenaris.Manager.Command.soap" forumPresent="false" isTargetManager="true"/>
    </Redundancy>
  </Tenaris.Manager.Command.CommandManager>

  <Tenaris.Manager.Production.ProductionManager
  instanceType="Tenaris.Manager.Production.Shared.IProductionManager, Tenaris.Manager.Production.Shared"
  aliveInterval="5000"
  singleInstance="true"
  isSingleton="true"
  validateConnection="false">
    <Redundancy>
      <Address url="tcp://TNACAWFM197.tnsautoca.techint.net:21006/Tenaris.Manager.Production.ProductionManager.soap" forumPresent="false" isTargetManager="true"/>
    </Redundancy>
  </Tenaris.Manager.Production.ProductionManager>

  <Tenaris.Manager.Preset.PresetManager
  instanceType="Tenaris.Manager.Preset.Shared.IPresetManager, Tenaris.Manager.Preset.Shared"
  aliveInterval="5000"
  singleInstance="true"
  isSingleton="true"
      validateConnection="false">
    <Redundancy>
      <Address url="tcp://TNACAWFM197.tnsautoca.techint.net:21008/Tenaris.Manager.Preset.soap" forumPresent="false" isTargetManager="true"/>
    </Redundancy>
  </Tenaris.Manager.Preset.PresetManager>

  <Tenaris.Manager.Tda.TdaManager
  instanceType="Tenaris.Manager.Tda.Shared.ITdaManager, Tenaris.Manager.Tda.Shared"
  aliveInterval="5000"
  singleInstance="true"
  isSingleton="true"
  validateConnection="false">
    <Redundancy>
      <Address url="tcp://TNACAWFM197.tnsautoca.techint.net:21009/Tenaris.Manager.Tda.soap" forumPresent="false" isTargetManager="true"/>
    </Redundancy>
  </Tenaris.Manager.Tda.TdaManager>

  <system.runtime.remoting>
    <application name="HptManager">
      <channels>
        <channel ref="tcp" port="49600" >
          <clientProviders>
            <provider type="Tenaris.Library.Proxy.Remoting.ClientRemotingInterceptorProvider, Tenaris.Library.Proxy" />
            <formatter ref="binary" typeFilterLevel="Full" />
          </clientProviders>
          <serverProviders>
            <formatter ref="binary" typeFilterLevel="Full" />
          </serverProviders>
        </channel>
      </channels>
    </application>
  </system.runtime.remoting>

  <log
  maxFileCount="10"
  maxQueueSize="10000"
  noQueue="true"
  maxFileSize="8096"
  dumpStack="true"
  msgFormat="{TypeChar}{Timestamp:yyyy-MM-dd HH:mm:ss.fff} [{ThreadId,-3:d3}] [{LapFriendlyValue,-8:f2}{LapFriendlyUnit,2}] [{AssemblyName,-45:s45}] {Message}"
  logLevel="Debug"
  traceAttributeLogEnabled="false"
  additionalLogDestination="Console"
  path="..\..\..\Logs\Manager\HydrotestManager\"
  logBaseName="HydrotestManager"
    />

  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0" />
  </startup>

</configuration>